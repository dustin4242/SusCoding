const screenWidth = 100
const screenHeight = 30

const alive = "#"
const dead = " "

let aliveByte = alive[0]
let deadByte = dead[0]

let lifeArray = [dead]
let placeholder = dead
for(i = 0, screenWidth)
	placeholder = placeholder + dead
end
for(i = 0, screenHeight)
	push(lifeArray, placeholder)
end

lifeArray[1] = alive + dead + alive + dead + alive + dead + dead + alive + dead
lifeArray[2] = dead + dead + dead + alive + dead + alive + alive + alive + alive
lifeArray[3] = dead + alive + alive + alive + dead + dead + alive + alive + alive
for(i = 1, 4)
	for(j = 0, screenWidth - 12)
		lifeArray[i] = lifeArray[i] + dead
	end
	lifeArray[i] = lifeArray[i] + alive + alive + alive + dead
end

for(iter = 0, 1000)
for(i = 1, screenHeight)
	print(lifeArray[i], "\n")
end
print("\u001b[29A")
let newLifeArray = ["0"]
for(y = 1, screenHeight + 1)
	let newLine = dead
	for(x = 1, screenWidth + 1)
		let leftNeighbor = x - 1
		let rightNeighbor = x + 1
		let topNeighbor = y - 1
		let bottomNeighbor = y + 1
	
		if(x == 1)
			leftNeighbor = screenWidth
		elif(x == screenWidth)
			rightNeighbor = 1
		end
		
		if(y == 1)
			topNeighbor = screenHeight
		elif(y == screenHeight)
			bottomNeighbor = 1
		end

		let aliveNeighbors = 0
		function checkAlive(line: string, x: number)
			if(line[x] == aliveByte)
				aliveNeighbors = aliveNeighbors + 1
			end
			return 1
		end
		
		call(checkAlive, lifeArray[topNeighbor], leftNeighbor)
		call(checkAlive, lifeArray[topNeighbor], x)
		call(checkAlive, lifeArray[topNeighbor], rightNeighbor)
		call(checkAlive, lifeArray[y], leftNeighbor)
		call(checkAlive, lifeArray[y], rightNeighbor)
		call(checkAlive, lifeArray[bottomNeighbor], leftNeighbor)
		call(checkAlive, lifeArray[bottomNeighbor], x)
		call(checkAlive, lifeArray[bottomNeighbor], rightNeighbor)
		
		if(lifeArray[y][x] == aliveByte)
			if(aliveNeighbors == 2)
				newLine = newLine + alive
			elif(aliveNeighbors == 3)
				newLine = newLine + alive
			else
				newLine = newLine + dead
			end
		elif(lifeArray[y][x] == deadByte)
			if(aliveNeighbors == 3)
				newLine = newLine + alive
			else
				newLine = newLine + dead
			end
		end
	end
	push(newLifeArray, newLine)
end
lifeArray = newLifeArray
call(time.Sleep, 100 * time.Millisecond)
end
